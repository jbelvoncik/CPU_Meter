//
//  OverlayView.swift
//  CPU_Meter
//
//  Displays per-core CPU bars plus overall GPU/ANE placeholders.
//  Generated by ChatGPT (GPT-5) for Jozef Belvončik — educational use.
//
//  © 2025 Jozef Belvončik MIT License
//

import SwiftUI

struct OverlayView: View {
    @StateObject private var cpu = CPUUsageSampler()
    @StateObject private var gpuane = GPUANESampler()

    var body: some View {
        VStack(alignment: .leading, spacing: 8) {
            // --- Overall CPU / GPU / ANE ---
            metricRow(label: "CPU", value: cpu.overall * 100)
            metricRow(label: "GPU", value: gpuane.gpuPercent)
            metricRow(label: "ANE", value: gpuane.anePercent)

            Divider().background(.white.opacity(0.3))

            // --- Per-core bars ---
            VStack(alignment: .leading, spacing: 4) {
                ForEach(Array(cpu.cores.enumerated()), id: \.offset) { index, value in
                    HStack(spacing: 6) {
                        Text(String(format: "%02d", index + 1))
                            .frame(width: 26, alignment: .trailing)
                            .font(.system(size: 12, weight: .medium, design: .monospaced))
                        GeometryReader { geo in
                            ZStack(alignment: .leading) {
                                RoundedRectangle(cornerRadius: 3)
                                    .fill(Color.white.opacity(0.15))
                                RoundedRectangle(cornerRadius: 3)
                                    .fill(Color.green.opacity(0.8))
                                    .frame(width: geo.size.width * CGFloat(min(value, 1.0)))
                            }
                        }
                        .frame(height: 8)
                    }
                }
            }
            .frame(width: 160, alignment: .leading)
        }
        .font(.system(size: 16, weight: .bold, design: .rounded))
        .foregroundColor(.white)
        .padding(16)
        .frame(minWidth: 200)
        .background(.black.opacity(0.35))
        .clipShape(RoundedRectangle(cornerRadius: 14, style: .continuous))
    }

    private func metricRow(label: String, value: Double) -> some View {
        HStack {
            Text(label)
            Spacer()
            if value.isNaN || value.isZero {
                Text("-- %")
            } else {
                Text(String(format: "%.0f %%", value))
            }
        }
        .frame(width: 160)
        .monospacedDigit()
    }
}
